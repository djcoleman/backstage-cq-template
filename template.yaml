apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: camel-quarkus-example
  title: Camel Quarkus Example
  description: A simple Apache Camel route running on Quarkus
  tags:
    - camel
    - quarkus
spec:
  owner: Red Hat
  type: service
  parameters:
    - title: Please fill in the following fields
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Component Name
          type: string
          description: The name of the component
          ui:field: EntityNamePicker
        group_id:
          title: Maven Group Id
          type: string
          description: The Maven Group Id and package name
          default: com.example
        version:
          title: Version
          type: string
          description: Semantic version number for the component (e.g. 1.0.0)
          default: 1.0.0
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          group_id: ${{ parameters.group_id }}
          version: ${{ parameters.version }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          path: ${{ parameters.group_id | replace(".", "/") }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
      